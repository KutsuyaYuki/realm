---
import { ListMusic } from "lucide-solid";
import DefaultLayout from "../../layouts/Default.astro";
import LyricsItem from "../../components/solidjs/LyricsItem";
import "../../styles/globals.css";
import { Image } from "@astrojs/image/components";
import { getCollection } from "astro:content";

const allLyrics = await getCollection("lyrics");

let title = "Song Lyrics";
let description = "My song lyrics collection.";
---

<DefaultLayout title={title} description={description}>
  <div class="relative text-center lg:text-start min-h-[18rem] overflow-hidden w-full border-b border-neutral-700 flex items-center">
    <Image
      src="/profile/unsplash-bg.webp"
      alt="Unsplash Background by Alex Perez"
      class="min-h-[18rem] max-h-full w-full object-cover brightness-50 absolute inset-0"
      height={720}
      width={1560}
      loading="eager"
    />
    <header class="relative flex flex-col justify-center w-full max-w-3xl gap-2 px-4 mx-auto text-neutral-200">
      <h1 class="text-4xl font-bold font-heading">
        Song Lyrics
      </h1>
      <p class="text-xl text-neutral-400">
        Every song lyrics that I've stashed, then 'til now.
      </p>
    </header>
  </div>
  <section class="relative z-10 w-full py-12">
    <div class="max-w-3xl px-4 mx-auto prose prose-invert prose-p:text-neutral-400 prose-headings:text-neutral-200 prose-headings:font-bold prose-headings:font-heading">
      <h2 class="flex items-center justify-start gap-5 pb-4 border-b border-neutral-700">
        <div class="flex items-center gap-3">
          <ListMusic size={28} />
        </div>
        Why I make this section
      </h2>
      <p>
        I'm a really huge fan of music so yeah. That's the short answer. The long answer is that I'm bored and I need to post somehow since I use MDX as my
        blog post format. So yeah, I just make this section to fill the gap (and maybe get those extra GitHub commits).
      </p>
      <p>
        Oh, here's your list:
      </p>
      <div class="grid grid-cols-1 gap-4 not-prose md:grid-cols-2">
        {allLyrics.sort((a, b) => {
          if (a.data.title < b.data.title) {
            return -1;
          } else {
            return 1;
          }
        }).map((lyric) => (
          <LyricsItem slug={lyric.slug} {...lyric.data} />
        ))}
      </div>
    </div>
  </section>
</DefaultLayout>
